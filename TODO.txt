(fn) for lambda definition
(cons)
(quote)
'
(cond)
(let)
(defn) combines (def) and (fn) (define defn (fn (name args block) (define name (fn args block))))
unlimited int for bigint
(and)
(or)
(not)
(xor)
(=)
(<)
(<=)
(>)
(>=)
(><)
(if) (defn if (cnd block else) (cond (cnd block) (true else)))
(*)
(/)
comments in Lisp code ;;
string concatenation
output
input
substrings
bessere Fehlermeldungen im Interpreter
bessere Fehlermeldungen im Parser